trigger:
  - main

pool:
  vmImage: ubuntu-latest

stages:
# -----------------------------
# Stage 1: DEV
# -----------------------------
- stage: Dev
  displayName: "Terraform Deploy - DEV"
  jobs:
    - job: dev
      steps:
        - task: TerraformInstaller@1
          displayName: 'Install Terraform'
          inputs:
            terraformVersion: 'latest'

        - task: TerraformTaskV4@4
          displayName: 'Terraform Init (Dev)'
          inputs:
            provider: 'azurerm'
            command: 'init'
            backendServiceArm: 'idaug25'
            backendAzureRmResourceGroupName: 'RG-Storage'
            backendAzureRmStorageAccountName: 'newaddsstorage'
            backendAzureRmContainerName: 'tf-container'
            backendAzureRmKey: 'dev.tfstate'
            workingDirectory: '$(System.DefaultWorkingDirectory)'

        - task: TerraformTaskV4@4
          displayName: 'Terraform Plan (Dev)'
          inputs:
            provider: 'azurerm'
            command: 'plan'
            environmentServiceNameAzureRM: 'idaug25'
            commandOptions: '-var env=dev -var location=centralindia'
            workingDirectory: '$(System.DefaultWorkingDirectory)'

        - task: TerraformTaskV4@4
          displayName: 'Terraform Apply (Dev)'
          inputs:
            provider: 'azurerm'
            command: 'apply'
            commandOptions: '--auto-approve -var env=dev -var location=centralindia'
            environmentServiceNameAzureRM: 'idaug25'
            workingDirectory: '$(System.DefaultWorkingDirectory)'

# -----------------------------
# Stage 2: QA
# -----------------------------
- stage: QA
  displayName: "Terraform Deploy - QA"
  dependsOn: Dev
  jobs:
    - job: qa
      steps:
        - task: TerraformInstaller@1
          inputs:
            terraformVersion: 'latest'

        - task: TerraformTaskV4@4
          displayName: 'Terraform Init (QA)'
          inputs:
            provider: 'azurerm'
            command: 'init'
            backendServiceArm: 'idaug25'
            backendAzureRmResourceGroupName: 'RG-Storage'
            backendAzureRmStorageAccountName: 'newaddsstorage'
            backendAzureRmContainerName: 'tf-container'
            backendAzureRmKey: 'qa.tfstate'
            workingDirectory: '$(System.DefaultWorkingDirectory)'

        - task: TerraformTaskV4@4
          displayName: 'Terraform Plan (QA)'
          inputs:
            provider: 'azurerm'
            command: 'plan'
            environmentServiceNameAzureRM: 'idaug25'
            commandOptions: '-var env=qa -var location=centralindia'
            workingDirectory: '$(System.DefaultWorkingDirectory)'

        - task: TerraformTaskV4@4
          displayName: 'Terraform Apply (QA)'
          inputs:
            provider: 'azurerm'
            command: 'apply'
            commandOptions: '--auto-approve -var env=qa -var location=centralindia'
            environmentServiceNameAzureRM: 'idaug25'
            workingDirectory: '$(System.DefaultWorkingDirectory)'

# -----------------------------
# Stage 3: PROD
# -----------------------------
- stage: Prod
  displayName: "Terraform Deploy - PROD"
  dependsOn: QA
  jobs:
    - job: prod
      steps:
        - task: TerraformInstaller@1
          inputs:
            terraformVersion: 'latest'

        - task: TerraformTaskV4@4
          displayName: 'Terraform Init (Prod)'
          inputs:
            provider: 'azurerm'
            command: 'init'
            backendServiceArm: 'idaug25'
            backendAzureRmResourceGroupName: 'RG-Storage'
            backendAzureRmStorageAccountName: 'newaddsstorage'
            backendAzureRmContainerName: 'tf-container'
            backendAzureRmKey: 'prod.tfstate'
            workingDirectory: '$(System.DefaultWorkingDirectory)'

        - task: TerraformTaskV4@4
          displayName: 'Terraform Plan (Prod)'
          inputs:
            provider: 'azurerm'
            command: 'plan'
            environmentServiceNameAzureRM: 'idaug25'
            commandOptions: '-var env=prod -var location=centralindia'
            workingDirectory: '$(System.DefaultWorkingDirectory)'

        - task: TerraformTaskV4@4
          displayName: 'Terraform Apply (Prod)'
          inputs:
            provider: 'azurerm'
            command: 'apply'
            commandOptions: '--auto-approve -var env=prod -var location=centralindia'
            environmentServiceNameAzureRM: 'idaug25'
            workingDirectory: '$(System.DefaultWorkingDirectory)'
